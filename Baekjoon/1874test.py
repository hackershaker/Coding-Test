from unittest import TestCase, main, mock
import importlib


p1874 = importlib.import_module('1874')


class testClass(TestCase):
    testcase = [
        (['8','4','3','6','8','7','5','2','1'], ['+','+','+','+','-','-','+','+','-','+','+','-','-','-','-','-']),
        (['8','1','5','4','2','3','6','8','7'], 'NO'),
        (['8','3','2','4','7','6','8','5','1'], ['+', '+', '+', '-', '-', '+', '-', '+', '+', '+', '-', '-', '+', '-', '-', '-']),
        (['5','1','2','5','3','4'], 'NO'),
        (['4','2','3','1','4'], ['+', '+', '-', '+', '-', '-', '+', '-']),
        (['3','3','2','1'], ['+','+','+','-','-','-']),
        (['3','1','2','3'], ['+', '-', '+', '-', '+', '-']),
        (['1', '1'], ['+','-']),
        (['2', '1', '2'], ['+', '-', '+', '-']),
        (['4','4','2','3','1'], 'NO'),
        (['6','3','6','2','5','1','4'], 'NO'),
        (['6','5','4','2','6','1','3'], 'NO'),
        (['6','3','6','5','4','2','1'], ['+','+','+','-','+','+','+','-','-','-','-','-']),
        (['6','1','2','3','6','5','4'], ['+','-','+','-','+','-','+','+','+','-','-','-']),
        (['6','2','4','6','5','3','1'], ['+','+','-','+','+','-','+','+','-','-','-','-']),
        (['6','1','2','4','5','6','3'], ['+', '-', '+', '-', '+', '+', '-', '+', '-', '+', '-', '-']),
        (['6','1','5','4','3','2','6'], ['+', '-', '+', '+', '+', '+', '-', '-', '-', '-', '+', '-']),
    ]


    def test1874(self):
        for case, answer in testClass.testcase:
            with mock.patch('builtins.input', side_effect = case):
                self.assertEqual(p1874.solution(), answer, f'{case}, {answer}')


if __name__=='__main__':
    main()